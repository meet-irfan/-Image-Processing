# -*- coding: utf-8 -*-
"""Filtering Techniques

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F-aFTdZHDXwZ4k9bS8YCAwvXZQfXLbil
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the image in grayscale
image = cv2.imread('/content/image25.jpg', cv2.IMREAD_GRAYSCALE)

# Apply Gaussian Blur
gaussian_blur = cv2.GaussianBlur(image, (5, 5), 0)

# Apply Median Filter
median_blur = cv2.medianBlur(image, 5)

# Apply Bilateral Filter (for edge-preserving smoothness)
bilateral_filter = cv2.bilateralFilter(image, 9, 75, 75)

# Display the original and filtered images
plt.figure(figsize=(15, 10))

# Original Image
plt.subplot(2, 2, 1)
plt.title('Original Image')
plt.imshow(image, cmap='gray')

# Gaussian Filtered Image
plt.subplot(2, 2, 2)
plt.title('Gaussian Filter')
plt.imshow(gaussian_blur, cmap='gray')

# Median Filtered Image
plt.subplot(2, 2, 3)
plt.title('Median Filter')
plt.imshow(median_blur, cmap='gray')

# Bilateral Filtered Image
plt.subplot(2, 2, 4)
plt.title('Bilateral Filter')
plt.imshow(bilateral_filter, cmap='gray')

plt.show()