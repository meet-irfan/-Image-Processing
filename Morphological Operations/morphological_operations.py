# -*- coding: utf-8 -*-
"""Morphological Operations

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12tVE_s0uPaQR1XOsc_gajyd096nfqGs9
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load a binary image
image = cv2.imread('/content/binary_image.png', 0)  # Make sure it's a binary image (black & white)

# Create a kernel (structuring element) for morphological operations
kernel = np.ones((5, 5), np.uint8)

# 1. Dilation
dilated_image = cv2.dilate(image, kernel, iterations=1)

# 2. Erosion
eroded_image = cv2.erode(image, kernel, iterations=1)

# 3. Opening (Erosion followed by Dilation)
opening_image = cv2.morphologyEx(image, cv2.MORPH_OPEN, kernel)

# 4. Closing (Dilation followed by Erosion)
closing_image = cv2.morphologyEx(image, cv2.MORPH_CLOSE, kernel)

# 5. Hit-or-Miss (Only works for binary images)
# Define a hit-or-miss kernel (structuring element)
hit_or_miss_kernel = np.array([[0, 1, 0],
                               [1, -1, 1],
                               [0, 1, 0]], np.int8)

# Hit-or-miss transform
hit_or_miss_image = cv2.morphologyEx(image, cv2.MORPH_HITMISS, hit_or_miss_kernel)

# Display results
plt.figure(figsize=(15, 8))

# Original Image
plt.subplot(2, 3, 1)
plt.title("Original Image")
plt.imshow(image, cmap='gray')

# Dilation
plt.subplot(2, 3, 2)
plt.title("Dilation")
plt.imshow(dilated_image, cmap='gray')

# Erosion
plt.subplot(2, 3, 3)
plt.title("Erosion")
plt.imshow(eroded_image, cmap='gray')

# Opening
plt.subplot(2, 3, 4)
plt.title("Opening")
plt.imshow(opening_image, cmap='gray')

# Closing
plt.subplot(2, 3, 5)
plt.title("Closing")
plt.imshow(closing_image, cmap='gray')

# Hit-or-Miss
plt.subplot(2, 3, 6)
plt.title("Hit-or-Miss")
plt.imshow(hit_or_miss_image, cmap='gray')

plt.show()