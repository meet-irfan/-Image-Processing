# -*- coding: utf-8 -*-
"""Watershed Segmentation

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b_1rpP0TiT88-5FGB1nZyeTv8eCck5Ag
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the image in grayscale
image = cv2.imread('/content/2.jpg', cv2.IMREAD_GRAYSCALE)

# Convert to BGR for later visualization
image_color = cv2.cvtColor(image, cv2.COLOR_GRAY2BGR)

# Step 1: Apply Otsu's thresholding to create a binary image
_, binary_image = cv2.threshold(image, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)

# Step 2: Remove noise using morphological opening
kernel = np.ones((3, 3), np.uint8)
opening = cv2.morphologyEx(binary_image, cv2.MORPH_OPEN, kernel, iterations=2)

# Step 3: Find sure background using dilation
sure_bg = cv2.dilate(opening, kernel, iterations=3)

# Step 4: Find sure foreground using distance transform and thresholding
dist_transform = cv2.distanceTransform(opening, cv2.DIST_L2, 5)
_, sure_fg = cv2.threshold(dist_transform, 0.7 * dist_transform.max(), 255, 0)

# Convert sure foreground to uint8
sure_fg = np.uint8(sure_fg)

# Step 5: Find the unknown region by subtracting sure foreground from background
unknown = cv2.subtract(sure_bg, sure_fg)

# Step 6: Label markers for watershed.
# Background is labeled as 1, and foreground is labeled with increasing numbers
_, markers = cv2.connectedComponents(sure_fg)

# Add one to all markers so that background is not zero
markers = markers + 1

# Mark the unknown region as 0
markers[unknown == 255] = 0

# Step 7: Apply the watershed algorithm
markers = cv2.watershed(image_color, markers)

# Mark boundary regions with red in the color image
image_color[markers == -1] = [255, 0, 0]  # Mark boundaries in red

# Plot the results
plt.figure(figsize=(10, 6))

# Original Image
plt.subplot(1, 2, 1)
plt.title("Original Image")
plt.imshow(cv2.cvtColor(cv2.imread('/content/2.jpg'), cv2.COLOR_BGR2RGB))  # Convert BGR to RGB for matplotlib

# Watershed Segmentation Result
plt.subplot(1, 2, 2)
plt.title("Watershed Segmentation")
plt.imshow(cv2.cvtColor(image_color, cv2.COLOR_BGR2RGB))  # Convert BGR to RGB for matplotlib

plt.show()